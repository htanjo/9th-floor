import{A as p,M as w,_ as M,e as R,f as N,g as C,h as B,i as k,j as T,P as D,T as O,Q as S,V as W,B as K,O as F,E as Y,k as L}from"./Screen-BGYS1Tyr.js";class U{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(t,e,i,n){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=e,this._target=t,this._scene=i,this._host=n,this._activeTargets=[],e._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===p.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=w.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,this._minFrame!==0){const o={frame:0,value:this._minValue};this._keys.splice(0,0,o)}if(this._target instanceof Array){let o=0;for(const s of this._target)this._preparePath(s,o),this._getOriginalValues(o),o++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const a=e.getEvents();a&&a.length>0&&a.forEach(o=>{this._events.push(o._clone())}),this._enableBlending=t&&t.animationPropertiesOverride?t.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(t,e=0){const i=this._animation.targetPropertyPath;if(i.length>1){let n=t;for(let a=0;a<i.length-1;a++){const o=i[a];if(n=n[o],n===void 0)throw new Error(`Invalid property (${o}) in property path (${i.join(".")})`)}this._targetPath=i[i.length-1],this._activeTargets[e]=n}else this._targetPath=i[0],this._activeTargets[e]=t;if(this._activeTargets[e][this._targetPath]===void 0)throw new Error(`Invalid property (${this._targetPath}) in property path (${i.join(".")})`)}get animation(){return this._animation}reset(t=!1){if(t)if(this._target instanceof Array){let e=0;for(const i of this._target)this._originalValue[e]!==void 0&&this._setValue(i,this._activeTargets[e],this._originalValue[e],-1,e),e++}else this._originalValue[0]!==void 0&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let e=0;e<this._events.length;e++)this._events[e].isDone=!1}isStopped(){return this._stopped}dispose(){const t=this._animation.runtimeAnimations.indexOf(this);t>-1&&this._animation.runtimeAnimations.splice(t,1)}setValue(t,e){if(this._targetIsArray){for(let i=0;i<this._target.length;i++){const n=this._target[i];this._setValue(n,this._activeTargets[i],t,e,i)}return}this._setValue(this._target,this._directTarget,t,e,0)}_getOriginalValues(t=0){let e;const i=this._activeTargets[t];i.getLocalMatrix&&this._targetPath==="_matrix"?e=i.getLocalMatrix():e=i[this._targetPath],e&&e.clone?this._originalValue[t]=e.clone():this._originalValue[t]=e}_setValue(t,e,i,n,a){if(this._currentActiveTarget=e,this._weight=n,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const s=e[this._targetPath];s.clone?this._originalBlendValue=s.clone():this._originalBlendValue=s}this._originalBlendValue.m?p.AllowMatrixDecomposeForInterpolation?this._currentValue?w.DecomposeLerpToRef(this._originalBlendValue,i,this._blendingFactor,this._currentValue):this._currentValue=w.DecomposeLerp(this._originalBlendValue,i,this._blendingFactor):this._currentValue?w.LerpToRef(this._originalBlendValue,i,this._blendingFactor,this._currentValue):this._currentValue=w.Lerp(this._originalBlendValue,i,this._blendingFactor):this._currentValue=p._UniversalLerp(this._originalBlendValue,i,this._blendingFactor);const o=t&&t.animationPropertiesOverride?t.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=o}else this._currentValue?this._currentValue.copyFrom?this._currentValue.copyFrom(i):this._currentValue=i:i!=null&&i.clone?this._currentValue=i.clone():this._currentValue=i;n!==-1?this._scene._registerTargetForLateAnimationBinding(this,this._originalValue[a]):this._animationState.loopMode===p.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[a],e[this._targetPath]):e[this._targetPath]=this._originalValue[a]+this._currentValue:e[this._targetPath]=this._currentValue,t.markAsDirty&&t.markAsDirty(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(t,e=-1){const i=this._animation.getKeys();t<i[0].frame?t=i[0].frame:t>i[i.length-1].frame&&(t=i[i.length-1].frame);const n=this._events;if(n.length)for(let o=0;o<n.length;o++)n[o].onlyOnce||(n[o].isDone=n[o].frame<t);this._currentFrame=t;const a=this._animation._interpolate(t,this._animationState);this.setValue(a,e)}_prepareForSpeedRatioChange(t){const e=this._previousElapsedTime*(this._animation.framePerSecond*t)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-e}animate(t,e,i,n,a,o=-1){const s=this._animation,l=s.targetPropertyPath;if(!l||l.length<1)return this._stopped=!0,!1;let h=!0;(e<this._minFrame||e>this._maxFrame)&&(e=this._minFrame),(i<this._minFrame||i>this._maxFrame)&&(i=this._maxFrame);const _=i-e;let c,m=t*(s.framePerSecond*a)/1e3+this._absoluteFrameOffset,g=0,f=!1;const A=n&&this._animationState.loopMode===p.ANIMATIONLOOPMODE_YOYO;if(A){const d=(m-e)/_,y=Math.sin(d*Math.PI);m=Math.abs(y)*_+e;const x=y>=0?1:-1;this._yoyoDirection!==x&&(f=!0),this._yoyoDirection=x}if(this._previousElapsedTime=t,this._previousAbsoluteFrame=m,!n&&i>=e&&(m>=_&&a>0||m<=0&&a<0))h=!1,g=s._getKeyValue(this._maxValue);else if(!n&&e>=i&&(m<=_&&a<0||m>=0&&a>0))h=!1,g=s._getKeyValue(this._minValue);else if(this._animationState.loopMode!==p.ANIMATIONLOOPMODE_CYCLE){const d=i.toString()+e.toString();if(!this._offsetsCache[d]){this._animationState.repeatCount=0,this._animationState.loopMode=p.ANIMATIONLOOPMODE_CYCLE;const y=s._interpolate(e,this._animationState),P=s._interpolate(i,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),s.dataType){case p.ANIMATIONTYPE_FLOAT:this._offsetsCache[d]=P-y;break;case p.ANIMATIONTYPE_QUATERNION:this._offsetsCache[d]=P.subtract(y);break;case p.ANIMATIONTYPE_VECTOR3:this._offsetsCache[d]=P.subtract(y);break;case p.ANIMATIONTYPE_VECTOR2:this._offsetsCache[d]=P.subtract(y);break;case p.ANIMATIONTYPE_SIZE:this._offsetsCache[d]=P.subtract(y);break;case p.ANIMATIONTYPE_COLOR3:this._offsetsCache[d]=P.subtract(y);break}this._highLimitsCache[d]=P}g=this._highLimitsCache[d],c=this._offsetsCache[d]}if(c===void 0)switch(s.dataType){case p.ANIMATIONTYPE_FLOAT:c=0;break;case p.ANIMATIONTYPE_QUATERNION:c=k;break;case p.ANIMATIONTYPE_VECTOR3:c=B;break;case p.ANIMATIONTYPE_VECTOR2:c=C;break;case p.ANIMATIONTYPE_SIZE:c=N;break;case p.ANIMATIONTYPE_COLOR3:c=R;break;case p.ANIMATIONTYPE_COLOR4:c=M;break}let u;if(this._host&&this._host.syncRoot){const d=this._host.syncRoot,y=(d.masterFrame-d.fromFrame)/(d.toFrame-d.fromFrame);u=e+_*y}else m>0&&e>i||m<0&&e<i?u=h&&_!==0?i+m%_:e:u=h&&_!==0?e+m%_:i;const b=this._events;if(!A&&(a>0&&this.currentFrame>u||a<0&&this.currentFrame<u)||A&&f){this._onLoop();for(let d=0;d<b.length;d++)b[d].onlyOnce||(b[d].isDone=!1);this._animationState.key=a>0?0:s.getKeys().length-1}this._currentFrame=u,this._animationState.repeatCount=_===0?0:m/_>>0,this._animationState.highLimitValue=g,this._animationState.offsetValue=c;const v=s._interpolate(u,this._animationState);if(this.setValue(v,o),b.length){for(let d=0;d<b.length;d++)if(_>=0&&u>=b[d].frame&&b[d].frame>=e||_<0&&u<=b[d].frame&&b[d].frame<=e){const y=b[d];y.isDone||(y.onlyOnce&&(b.splice(d,1),d--),y.isDone=!0,y.action(u))}}return h||(this._stopped=!0),h}}class I{get syncRoot(){return this._syncRoot}get masterFrame(){return this._runtimeAnimations.length===0?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(t){if(t===-1){this._weight=-1;return}this._weight=Math.min(Math.max(t,0),1)}get speedRatio(){return this._speedRatio}set speedRatio(t){for(let e=0;e<this._runtimeAnimations.length;e++)this._runtimeAnimations[e]._prepareForSpeedRatioChange(t);this._speedRatio=t,this._goToFrame!==null&&this.goToFrame(this._goToFrame)}get elapsedTime(){return this._localDelayOffset===null?0:this._scene._animationTime-this._localDelayOffset}constructor(t,e,i=0,n=100,a=!1,o=1,s,l,h,_=!1,c=0){this.target=e,this.fromFrame=i,this.toFrame=n,this.loopAnimation=a,this.onAnimationEnd=s,this.onAnimationLoop=h,this.isAdditive=_,this.playOrder=c,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this._paused=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new F,this.onAnimationLoopObservable=new F,this._scene=t,l&&this.appendAnimations(e,l),this._speedRatio=o,t._activeAnimatables.push(this)}syncWith(t){if(this._syncRoot=t,t){const e=this._scene._activeAnimatables.indexOf(this);e>-1&&(this._scene._activeAnimatables.splice(e,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(t,e){for(let i=0;i<e.length;i++){const n=e[i],a=new U(t,n,this._scene,this);a._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(a)}}getAnimationByTargetProperty(t){const e=this._runtimeAnimations;for(let i=0;i<e.length;i++)if(e[i].animation.targetProperty===t)return e[i].animation;return null}getRuntimeAnimationByTargetProperty(t){const e=this._runtimeAnimations;for(let i=0;i<e.length;i++)if(e[i].animation.targetProperty===t)return e[i];return null}reset(){const t=this._runtimeAnimations;for(let e=0;e<t.length;e++)t[e].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(t){const e=this._runtimeAnimations;for(let i=0;i<e.length;i++)e[i].animation.enableBlending=!0,e[i].animation.blendingSpeed=t}disableBlending(){const t=this._runtimeAnimations;for(let e=0;e<t.length;e++)t[e].animation.enableBlending=!1}goToFrame(t){const e=this._runtimeAnimations;if(e[0]){const i=e[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??e[0].currentFrame;const n=this.speedRatio===0?0:(t-this._frameToSyncFromJump)/i*1e3/this.speedRatio;this._manualJumpDelay=-n}for(let i=0;i<e.length;i++)e[i].goToFrame(t,this._weight);this._goToFrame=t}get paused(){return this._paused}pause(){this._paused||(this._paused=!0)}restart(){this._paused=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(t,e,i=!1,n=!1){if(t||e){const a=this._scene._activeAnimatables.indexOf(this);if(a>-1){const o=this._runtimeAnimations;for(let s=o.length-1;s>=0;s--){const l=o[s];t&&l.animation.name!=t||e&&!e(l.target)||(l.dispose(),o.splice(s,1))}o.length==0&&(i||this._scene._activeAnimatables.splice(a,1),n||this._raiseOnAnimationEnd())}}else{const a=this._scene._activeAnimatables.indexOf(this);if(a>-1){i||this._scene._activeAnimatables.splice(a,1);const o=this._runtimeAnimations;for(let s=0;s<o.length;s++)o[s].dispose();this._runtimeAnimations.length=0,n||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise(t=>{this.onAnimationEndObservable.add(()=>{t(this)},void 0,void 0,this,!0)})}_animate(t){if(this._paused)return this.animationStarted=!1,this._pausedDelay===null&&(this._pausedDelay=t),!0;if(this._localDelayOffset===null?(this._localDelayOffset=t,this._pausedDelay=null):this._pausedDelay!==null&&(this._localDelayOffset+=t-this._pausedDelay,this._pausedDelay=null),this._manualJumpDelay!==null&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,this._weight===0)return!0;let e=!1;const i=this._runtimeAnimations;let n;for(n=0;n<i.length;n++){const o=i[n].animate(t-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);e=e||o}if(this.animationStarted=e,!e){if(this.disposeOnEnd)for(n=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(n,1),n=0;n<i.length;n++)i[n].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return e}}T.prototype._animate=function(r){if(!this.animationsEnabled)return;const t=D.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=t}this.deltaTime=r!==void 0?r:this.useConstantAnimationDeltaTime?16:(t-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=t;const e=this._activeAnimatables;if(e.length===0)return;this._animationTime+=this.deltaTime;const i=this._animationTime;for(let n=0;n<e.length;n++){const a=e[n];!a._animate(i)&&a.disposeOnEnd&&n--}this._processLateAnimationBindings()};T.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort((r,t)=>r.playOrder-t.playOrder)};T.prototype.beginWeightedAnimation=function(r,t,e,i=1,n,a=1,o,s,l,h,_=!1){const c=this.beginAnimation(r,t,e,n,a,o,s,!1,l,h,_);return c.weight=i,c};T.prototype.beginAnimation=function(r,t,e,i,n=1,a,o,s=!0,l,h,_=!1){if(n<0){const m=t;t=e,e=m,n=-n}t>e&&(n=-n),s&&this.stopAnimation(r,void 0,l),o||(o=new I(this,r,t,e,i,n,a,void 0,h,_));const c=l?l(r):!0;if(r.animations&&c&&o.appendAnimations(r,r.animations),r.getAnimatables){const m=r.getAnimatables();for(let g=0;g<m.length;g++)this.beginAnimation(m[g],t,e,i,n,a,o,s,l,h)}return o.reset(),o};T.prototype.beginHierarchyAnimation=function(r,t,e,i,n,a=1,o,s,l=!0,h,_,c=!1){const m=r.getDescendants(t),g=[];g.push(this.beginAnimation(r,e,i,n,a,o,s,l,h,void 0,c));for(const f of m)g.push(this.beginAnimation(f,e,i,n,a,o,s,l,h,void 0,c));return g};T.prototype.beginDirectAnimation=function(r,t,e,i,n,a=1,o,s,l=!1){if(a<0){const _=e;e=i,i=_,a=-a}return e>i&&(a=-a),new I(this,r,e,i,n,a,o,t,s,l)};T.prototype.beginDirectHierarchyAnimation=function(r,t,e,i,n,a,o,s,l,h=!1){const _=r.getDescendants(t),c=[];c.push(this.beginDirectAnimation(r,e,i,n,a,o,s,l,h));for(const m of _)c.push(this.beginDirectAnimation(m,e,i,n,a,o,s,l,h));return c};T.prototype.getAnimatableByTarget=function(r){for(let t=0;t<this._activeAnimatables.length;t++)if(this._activeAnimatables[t].target===r)return this._activeAnimatables[t];return null};T.prototype.getAllAnimatablesByTarget=function(r){const t=[];for(let e=0;e<this._activeAnimatables.length;e++)this._activeAnimatables[e].target===r&&t.push(this._activeAnimatables[e]);return t};T.prototype.stopAnimation=function(r,t,e){const i=this.getAllAnimatablesByTarget(r);for(const n of i)n.stop(t,e)};T.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let r=0;r<this._activeAnimatables.length;r++)this._activeAnimatables[r].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const r of this.animationGroups)r.stop()};T.prototype._registerTargetForLateAnimationBinding=function(r,t){const e=r.target;this._registeredForLateAnimationBindings.pushNoDuplicate(e),e._lateAnimationHolders||(e._lateAnimationHolders={}),e._lateAnimationHolders[r.targetPath]||(e._lateAnimationHolders[r.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:t}),r.isAdditive?(e._lateAnimationHolders[r.targetPath].additiveAnimations.push(r),e._lateAnimationHolders[r.targetPath].totalAdditiveWeight+=r.weight):(e._lateAnimationHolders[r.targetPath].animations.push(r),e._lateAnimationHolders[r.targetPath].totalWeight+=r.weight)};T.prototype._processLateAnimationBindingsForMatrices=function(r){if(r.totalWeight===0&&r.totalAdditiveWeight===0)return r.originalValue;let t=1;const e=O.Vector3[0],i=O.Vector3[1],n=O.Quaternion[0];let a=0;const o=r.animations[0],s=r.originalValue;let l=1,h=!1;if(r.totalWeight<1)l=1-r.totalWeight,s.decompose(i,n,e);else{if(a=1,t=r.totalWeight,l=o.weight/t,l==1)if(r.totalAdditiveWeight)h=!0;else return o.currentValue;o.currentValue.decompose(i,n,e)}if(!h){i.scaleInPlace(l),e.scaleInPlace(l),n.scaleInPlace(l);for(let c=a;c<r.animations.length;c++){const m=r.animations[c];if(m.weight===0)continue;l=m.weight/t;const g=O.Vector3[2],f=O.Vector3[3],A=O.Quaternion[1];m.currentValue.decompose(f,A,g),f.scaleAndAddToRef(l,i),A.scaleAndAddToRef(S.Dot(n,A)>0?l:-l,n),g.scaleAndAddToRef(l,e)}n.normalize()}for(let c=0;c<r.additiveAnimations.length;c++){const m=r.additiveAnimations[c];if(m.weight===0)continue;const g=O.Vector3[2],f=O.Vector3[3],A=O.Quaternion[1];m.currentValue.decompose(f,A,g),f.multiplyToRef(i,f),W.LerpToRef(i,f,m.weight,i),n.multiplyToRef(A,A),S.SlerpToRef(n,A,m.weight,n),g.scaleAndAddToRef(m.weight,e)}const _=o?o._animationState.workValue:O.Matrix[0].clone();return w.ComposeToRef(i,n,e,_),_};T.prototype._processLateAnimationBindingsForQuaternions=function(r,t){if(r.totalWeight===0&&r.totalAdditiveWeight===0)return t;const e=r.animations[0],i=r.originalValue;let n=t;if(r.totalWeight===0&&r.totalAdditiveWeight>0)n.copyFrom(i);else if(r.animations.length===1){if(S.SlerpToRef(i,e.currentValue,Math.min(1,r.totalWeight),n),r.totalAdditiveWeight===0)return n}else if(r.animations.length>1){let a=1,o,s;if(r.totalWeight<1){const h=1-r.totalWeight;o=[],s=[],o.push(i),s.push(h)}else{if(r.animations.length===2&&(S.SlerpToRef(r.animations[0].currentValue,r.animations[1].currentValue,r.animations[1].weight/r.totalWeight,t),r.totalAdditiveWeight===0))return t;o=[],s=[],a=r.totalWeight}for(let h=0;h<r.animations.length;h++){const _=r.animations[h];o.push(_.currentValue),s.push(_.weight/a)}let l=0;for(let h=0;h<o.length;){if(!h){S.SlerpToRef(o[h],o[h+1],s[h+1]/(s[h]+s[h+1]),t),n=t,l=s[h]+s[h+1],h+=2;continue}l+=s[h],S.SlerpToRef(n,o[h],s[h]/l,n),h++}}for(let a=0;a<r.additiveAnimations.length;a++){const o=r.additiveAnimations[a];o.weight!==0&&(n.multiplyToRef(o.currentValue,O.Quaternion[0]),S.SlerpToRef(n,O.Quaternion[0],o.weight,n))}return n};T.prototype._processLateAnimationBindings=function(){if(this._registeredForLateAnimationBindings.length){for(let r=0;r<this._registeredForLateAnimationBindings.length;r++){const t=this._registeredForLateAnimationBindings.data[r];for(const e in t._lateAnimationHolders){const i=t._lateAnimationHolders[e],n=i.animations[0],a=i.originalValue;if(a==null)continue;const o=p.AllowMatrixDecomposeForInterpolation&&a.m;let s=t[e];if(o)s=this._processLateAnimationBindingsForMatrices(i);else if(a.w!==void 0)s=this._processLateAnimationBindingsForQuaternions(i,s||S.Identity());else{let h=0,_=1;const c=n&&n._animationState.loopMode===p.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(i.totalWeight<1)c?s=a.clone?a.clone():a:n&&a.scale?s=a.scale(1-i.totalWeight):n?s=a*(1-i.totalWeight):a.clone?s=a.clone():s=a;else if(n){_=i.totalWeight;const m=n.weight/_;m!==1?n.currentValue.scale?s=n.currentValue.scale(m):s=n.currentValue*m:s=n.currentValue,c&&(s.addToRef?s.addToRef(a,s):s+=a),h=1}for(let m=h;m<i.animations.length;m++){const g=i.animations[m],f=g.weight/_;if(f)g.currentValue.scaleAndAddToRef?g.currentValue.scaleAndAddToRef(f,s):s+=g.currentValue*f;else continue}for(let m=0;m<i.additiveAnimations.length;m++){const g=i.additiveAnimations[m],f=g.weight;if(f)g.currentValue.scaleAndAddToRef?g.currentValue.scaleAndAddToRef(f,s):s+=g.currentValue*f;else continue}}t[e]=s}t._lateAnimationHolders={}}this._registeredForLateAnimationBindings.reset()}};K.prototype.copyAnimationRange=function(r,t,e,i=!1,n=null){this.animations.length===0&&(this.animations.push(new p(this.name,"_matrix",r.animations[0].framePerSecond,p.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const a=r.animations[0].getRange(t);if(!a)return!1;const o=a.from,s=a.to,l=r.animations[0].getKeys(),h=r.length,_=r.getParent(),c=this.getParent(),m=i&&_&&h&&this.length&&h!==this.length,g=m&&c&&_?c.length/_.length:1,f=i&&!c&&n&&(n.x!==1||n.y!==1||n.z!==1),A=this.animations[0].getKeys();let u,b,v;for(let d=0,y=l.length;d<y;d++)u=l[d],u.frame>=o&&u.frame<=s&&(i?(v=u.value.clone(),m?(b=v.getTranslation(),v.setTranslation(b.scaleInPlace(g))):f&&n?(b=v.getTranslation(),v.setTranslation(b.multiplyInPlace(n))):v=u.value):v=u.value,A.push({frame:u.frame+e,value:v}));return this.animations[0].createRange(t,o+e,s+e),!0};class E{getClassName(){return"TargetedAnimation"}serialize(){const t={};return t.animation=this.animation.serialize(),t.targetId=this.target.id,t}}class V{get mask(){return this._mask}set mask(t){this._mask!==t&&(this._mask=t,this.syncWithMask(!0))}syncWithMask(t=!1){if(!this.mask&&!t){this._numActiveAnimatables=this._targetedAnimations.length;return}this._numActiveAnimatables=0;for(let e=0;e<this._animatables.length;++e){const i=this._animatables[e];!this.mask||this.mask.disabled||this.mask.retainsTarget(i.target.name)?(this._numActiveAnimatables++,i.paused&&i.restart()):i.paused||i.pause()}}removeUnmaskedAnimations(){if(!(!this.mask||this.mask.disabled)){for(let t=0;t<this._animatables.length;++t){const e=this._animatables[t];this.mask.retainsTarget(e.target.name)||(e.stop(),this._animatables.splice(t,1),--t)}for(let t=0;t<this._targetedAnimations.length;t++){const e=this._targetedAnimations[t];this.mask.retainsTarget(e.target.name)||(this._targetedAnimations.splice(t,1),--t)}}}get from(){return this._from}set from(t){if(this._from!==t){this._from=t;for(let e=0;e<this._animatables.length;e++){const i=this._animatables[e];i.fromFrame=this._from}}}get to(){return this._to}set to(t){if(this._to!==t){this._to=t;for(let e=0;e<this._animatables.length;e++){const i=this._animatables[e];i.toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(t){if(this._speedRatio!==t){this._speedRatio=t;for(let e=0;e<this._animatables.length;e++){const i=this._animatables[e];i.speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(t){if(this._loopAnimation!==t){this._loopAnimation=t;for(let e=0;e<this._animatables.length;e++){const i=this._animatables[e];i.loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(t){if(this._isAdditive!==t){this._isAdditive=t;for(let e=0;e<this._animatables.length;e++){const i=this._animatables[e];i.isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(t){this._weight!==t&&(this._weight=t,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(t){if(this._playOrder!==t&&(this._playOrder=t,this._animatables.length>0)){for(let e=0;e<this._animatables.length;e++)this._animatables[e].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(t){if(this._enableBlending!==t&&(this._enableBlending=t,t!==null))for(let e=0;e<this._targetedAnimations.length;++e)this._targetedAnimations[e].animation.enableBlending=t}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(t){if(this._blendingSpeed!==t&&(this._blendingSpeed=t,t!==null))for(let e=0;e<this._targetedAnimations.length;++e)this._targetedAnimations[e].animation.blendingSpeed=t}getLength(t,e){t=t??this._from,e=e??this._to;const i=this.targetedAnimations[0].animation.framePerSecond*this._speedRatio;return(e-t)/i}static MergeAnimationGroups(t,e=!0,i=!1,n){if(t.length===0)return null;n=n??t[0].weight;let a=Number.MAX_VALUE,o=-Number.MAX_VALUE;if(i)for(const l of t)l.from<a&&(a=l.from),l.to>o&&(o=l.to);const s=new V(t[0].name+"_merged",t[0]._scene,n);for(const l of t){i&&l.normalize(a,o);for(const h of l.targetedAnimations)s.addTargetedAnimation(h.animation,h.target);e&&l.dispose()}return s}constructor(t,e=null,i=-1,n=0){this.name=t,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new F,this.onAnimationLoopObservable=new F,this.onAnimationGroupLoopObservable=new F,this.onAnimationGroupEndObservable=new F,this.onAnimationGroupPauseObservable=new F,this.onAnimationGroupPlayObservable=new F,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=e||Y.LastCreatedScene,this._weight=i,this._playOrder=n,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(t,e){const i=new E;i.animation=t,i.target=e;const n=t.getKeys();return this._from>n[0].frame&&(this._from=n[0].frame),this._to<n[n.length-1].frame&&(this._to=n[n.length-1].frame),this._enableBlending!==null&&(t.enableBlending=this._enableBlending),this._blendingSpeed!==null&&(t.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(i),this._shouldStart=!0,i}removeTargetedAnimation(t){for(let e=this._targetedAnimations.length-1;e>-1;e--)this._targetedAnimations[e].animation===t&&this._targetedAnimations.splice(e,1)}normalize(t=null,e=null){t==null&&(t=this._from),e==null&&(e=this._to);for(let i=0;i<this._targetedAnimations.length;i++){const a=this._targetedAnimations[i].animation.getKeys(),o=a[0],s=a[a.length-1];if(o.frame>t){const l={frame:t,value:o.value,inTangent:o.inTangent,outTangent:o.outTangent,interpolation:o.interpolation};a.splice(0,0,l)}if(s.frame<e){const l={frame:e,value:s.value,inTangent:s.inTangent,outTangent:s.outTangent,interpolation:s.interpolation};a.push(l)}}return this._from=t,this._to=e,this}_processLoop(t,e,i){t.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(e),!this._animationLoopFlags[i]&&(this._animationLoopFlags[i]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(t=!1,e=1,i,n,a){if(this._isStarted||this._targetedAnimations.length===0)return this;this._loopAnimation=t,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let o=0;o<this._targetedAnimations.length;o++){const s=this._targetedAnimations[o],l=this._scene.beginDirectAnimation(s.target,[s.animation],i!==void 0?i:this._from,n!==void 0?n:this._to,t,e,void 0,void 0,a!==void 0?a:this._isAdditive);l.weight=this._weight,l.playOrder=this._playOrder,l.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(s),this._checkAnimationGroupEnded(l)},this._processLoop(l,s,o),this._animatables.push(l)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=e,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let t=0;t<this._animatables.length;t++)this._animatables[t].pause();return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(t){return this.isStarted&&this._animatables.length&&!this._shouldStart?(t!==void 0&&(this.loopAnimation=t),this.restart()):(this.stop(),this.start(t,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let t=0;t<this._animatables.length;t++)this._animatables[t].reset();return this}restart(){if(!this._isStarted)return this;for(let t=0;t<this._animatables.length;t++)this._animatables[t].restart();return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(t=!1){if(!this._isStarted)return this;const e=this._animatables.slice();for(let n=0;n<e.length;n++)e[n].stop(void 0,void 0,!0,t);let i=0;for(let n=0;n<this._scene._activeAnimatables.length;n++){const a=this._scene._activeAnimatables[n];a._runtimeAnimations.length>0?this._scene._activeAnimatables[i++]=a:t&&this._checkAnimationGroupEnded(a,t)}return this._scene._activeAnimatables.length=i,this._isStarted=!1,this}setWeightForAllAnimatables(t){for(let e=0;e<this._animatables.length;e++){const i=this._animatables[e];i.weight=t}return this}syncAllAnimationsWith(t){for(let e=0;e<this._animatables.length;e++)this._animatables[e].syncWith(t);return this}goToFrame(t){if(!this._isStarted)return this;for(let e=0;e<this._animatables.length;e++)this._animatables[e].goToFrame(t);return this}getCurrentFrame(){var t;return((t=this.animatables[0])==null?void 0:t.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const t=this._scene.animationGroups.indexOf(this);if(t>-1&&this._scene.animationGroups.splice(t,1),this._parentContainer){const e=this._parentContainer.animationGroups.indexOf(this);e>-1&&this._parentContainer.animationGroups.splice(e,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(t,e=!1){const i=this._animatables.indexOf(t);i>-1&&this._animatables.splice(i,1),this._animatables.length===0&&(this._isStarted=!1,e||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(t,e,i=!1){const n=new V(t||this.name,this._scene,this._weight,this._playOrder);n._from=this.from,n._to=this.to,n._speedRatio=this.speedRatio,n._loopAnimation=this.loopAnimation,n._isAdditive=this.isAdditive,n._enableBlending=this.enableBlending,n._blendingSpeed=this.blendingSpeed,n.metadata=this.metadata,n.mask=this.mask;for(const a of this._targetedAnimations)n.addTargetedAnimation(i?a.animation.clone():a.animation,e?e(a.target):a.target);return n}serialize(){const t={};t.name=this.name,t.from=this.from,t.to=this.to,t.speedRatio=this.speedRatio,t.loopAnimation=this.loopAnimation,t.isAdditive=this.isAdditive,t.weight=this.weight,t.playOrder=this.playOrder,t.enableBlending=this.enableBlending,t.blendingSpeed=this.blendingSpeed,t.targetedAnimations=[];for(let e=0;e<this.targetedAnimations.length;e++){const i=this.targetedAnimations[e];t.targetedAnimations[e]=i.serialize()}return L&&L.HasTags(this)&&(t.tags=L.GetTags(this)),this.metadata&&(t.metadata=this.metadata),t}static Parse(t,e){const i=new V(t.name,e,t.weight,t.playOrder);for(let n=0;n<t.targetedAnimations.length;n++){const a=t.targetedAnimations[n],o=p.Parse(a.animation),s=a.targetId;if(a.animation.property==="influence"){const l=e.getMorphTargetById(s);l&&i.addTargetedAnimation(o,l)}else{const l=e.getNodeById(s);l!=null&&i.addTargetedAnimation(o,l)}}return L&&L.AddTagsTo(i,t.tags),t.from!==null&&t.to!==null&&i.normalize(t.from,t.to),t.speedRatio!==void 0&&(i._speedRatio=t.speedRatio),t.loopAnimation!==void 0&&(i._loopAnimation=t.loopAnimation),t.isAdditive!==void 0&&(i._isAdditive=t.isAdditive),t.weight!==void 0&&(i._weight=t.weight),t.playOrder!==void 0&&(i._playOrder=t.playOrder),t.enableBlending!==void 0&&(i._enableBlending=t.enableBlending),t.blendingSpeed!==void 0&&(i._blendingSpeed=t.blendingSpeed),t.metadata!==void 0&&(i.metadata=t.metadata),i}static MakeAnimationAdditive(t,e,i,n=!1,a){let o;typeof e=="object"?o=e:o={referenceFrame:e,range:i,cloneOriginalAnimationGroup:n,clonedAnimationName:a};let s=t;o.cloneOriginalAnimationGroup&&(s=t.clone(o.clonedAnimationGroupName||s.name));const l=s.targetedAnimations;for(let h=0;h<l.length;h++){const _=l[h];_.animation=p.MakeAnimationAdditive(_.animation,o)}if(s.isAdditive=!0,o.clipKeys){let h=Number.MAX_VALUE,_=-Number.MAX_VALUE;const c=s.targetedAnimations;for(let m=0;m<c.length;m++){const A=c[m].animation.getKeys();h>A[0].frame&&(h=A[0].frame),_<A[A.length-1].frame&&(_=A[A.length-1].frame)}s._from=h,s._to=_}return s}static ClipKeys(t,e,i,n,a){const o=t.clone(n||t.name);return V.ClipKeysInPlace(o,e,i,a)}static ClipKeysInPlace(t,e,i,n){return V.ClipInPlace(t,e,i,n,!1)}static ClipFrames(t,e,i,n,a){const o=t.clone(n||t.name);return V.ClipFramesInPlace(o,e,i,a)}static ClipFramesInPlace(t,e,i,n){return V.ClipInPlace(t,e,i,n,!0)}static ClipInPlace(t,e,i,n,a=!1){let o=Number.MAX_VALUE,s=-Number.MAX_VALUE;const l=t.targetedAnimations;for(let h=0;h<l.length;h++){const _=l[h],c=n?_.animation:_.animation.clone();a&&(c.createKeyForFrame(e),c.createKeyForFrame(i));const m=c.getKeys(),g=[];let f=Number.MAX_VALUE;for(let A=0;A<m.length;A++){const u=m[A];if(!a&&A>=e&&A<=i||a&&u.frame>=e&&u.frame<=i){const b={frame:u.frame,value:u.value.clone?u.value.clone():u.value,inTangent:u.inTangent,outTangent:u.outTangent,interpolation:u.interpolation,lockedTangent:u.lockedTangent};f===Number.MAX_VALUE&&(f=b.frame),b.frame-=f,g.push(b)}}if(g.length===0){l.splice(h,1),h--;continue}o>g[0].frame&&(o=g[0].frame),s<g[g.length-1].frame&&(s=g[g.length-1].frame),c.setKeys(g,!0),_.animation=c}return t._from=o,t._to=s,t}getClassName(){return"AnimationGroup"}toString(t){let e="Name: "+this.name;return e+=", type: "+this.getClassName(),t&&(e+=", from: "+this._from,e+=", to: "+this._to,e+=", isStarted: "+this._isStarted,e+=", speedRatio: "+this._speedRatio,e+=", targetedAnimations length: "+this._targetedAnimations.length,e+=", animatables length: "+this._animatables),e}}const H=Object.freeze(Object.defineProperty({__proto__:null,AnimationGroup:V,TargetedAnimation:E},Symbol.toStringTag,{value:"Module"}));export{V as A,U as R,E as T,I as a,H as b};
